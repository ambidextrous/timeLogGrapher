data = read.csv("sleepAnalysisData.csv",stringsAsFactors = FALSE)
summary(data)
dataTrain = read.csv("sleepAnalysisData.csv",stringsAsFactors = FALSE)
dataTest = read.csv("sleepAnalysisData.csv",stringsAsFactors = FALSE)
library(caTools)
install.packages("tm")
library(caTools)
install.packages("caTools")
library(caTools)
CorpusH = Corpus(VectorSource(c(dataTrain$hoursSleptNight,dataTest$hoursSleptNight)))
plot(hoursSleptNight ~ hoursSleptDay, data=data)
plot(hoursSleptNight ~ longestSleepHoursDay, data=data)
plot(hoursSleptNight ~ meanSleepTimeDay, data=data)
plot(longestSleepHoursNight ~ hoursSleptDay, data=data)
plot(longestSleepHourNight ~ hoursSleptDay, data=data)
plot(longestSleepHourNight ~ hoursSleepHoursDay, data=data)
plot(longestSleepHourNight ~ longestSleepHoursDay, data=data)
plot(longestSleepHourNight ~ meanSleepTimeDay, data=data)
lm(longestSleepHourNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = data)
lm.out
lm.out = lm(longestSleepHourNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = data)
lm.out
summary(lm.out)
lm2(longestSleepHourNight ~ meanSleepTimeDay, data = data)
lm(longestSleepHourNight ~ meanSleepTimeDay, data = data)
lm.out = lm(longestSleepHourNight ~ meanSleepTimeDay, data = data)
lm.out
summary(lm.out)
lm.out = lm(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = data)
lm(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = data)
lm.out = lm(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = data)
summary(lm.out)
plot(data)
data
plot("hoursSleptNight","hoursSleptDay","longestSleepHoursDay","meanSleepTimeDay")
sleepData = read.csv("sleepAnalysisData.csv")
summary(sleepData)
table(sleepData)
summary(sleepData)
table(sleepData$hoursSleptNight)
str(sleepData$hoursSleptNight)
split = sample.split(sleepData$hoursSleptNight, SplitRatio = 0.7)
install.packages("sample")
install.packages("caTools")
split = sample.split(sleepData$hoursSleptNight, SplitRatio = 0.7)
library(caTools)
split = sample.split(sleepData$hoursSleptNight, SplitRatio = 0.7)
train = subset(sleep, split == TRUE)
test = subset(sleep, split == FALSE)
test = subset(sleepData, split == FALSE)
train = subset(sleepData, split == TRUE)
test = subset(sleepData, split == FALSE)
str(train)
str(test)
model1 = glm(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = train, family = "binomial")
model1 = glm(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = train)
summary(model1)
model2 = lm(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = train)
summary(model2)
predictTest = predict(model2, type = "response", newdata = test)
summary(predictTest)
predictTest = predict(model2, newdata = test)
summary(predictTest)
predictTest = predict(model2, type = "response", newdata = test)
summary(predictTest)
summary(model2)
summary(test)
predict(model2, newdata = test)
table(test$hoursSleptNight,predictTest$hoursSleptNight)
table(test$hoursSleptNight,predictTest)
str(predictTest)
str(test$hoursSleptNight)
install.packages(caret)
install.packages("caret")
library(caret)
train_control = trainControl(method="LOOCV")
model3 = train
summary(sleepData)
model3 = train(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = sleepData, trControl=train_control, method="nb")
model3 = train(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = sleepData, trControl=train_control, method="nb")
model3 <- train(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = sleepData, trControl=train_control, method="nb")
fitControl = trainControl(method = "repeatedcv", number = 10, repeats = 10)
model3 = train(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay)
model3 = train(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = training)
model3 = train(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = train)
model3
summary(model3)
prediction = predict(model2, test, interval="predict")
prediction
prediction = predict(model2, test)
prediction
test$hoursSleptNight
sleepModel = lm(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = sleepData)
summary(sleepModel)
sleepModel2 = lm(hoursSleptNight ~ longestSleepHoursDay, data = sleepData)
summary(sleepModel2)
sleepModel3 = lm(hoursSleptNight ~ meanSleepTimeDay, data = sleepData)
sum(sleepModel3)
summary(sleepModel3)
sleepData = read.csv("sleepAnalysisData.csv")
sleepModel = lm(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = sleepData)
summary(sleepModel)
sleepData = read.csv("sleepAnalysisData.csv")
sleepModel = lm(hoursSleptNight ~ hoursSleptDay + longestSleepHoursDay + meanSleepTimeDay, data = sleepData)
summary(sleepModel)
